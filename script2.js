console.log('üéµ –ü–ª–µ–µ—Ä + –ú–∏–Ω–∏-–∏–≥—Ä–∞ (–∫–ª–∏–∫/—Ç–∞–ø, –¥–∏—Å—Ç–∞–Ω—Ü–∏–∏ 250‚Äì350, —Ñ–∏–Ω–∞–ª —Ñ—É–ª–ª—Å–∫—Ä–∏–Ω, drag –ø—Ä–æ–≥—Ä–µ—Å—Å–∞)');

/* ================= –ü–õ–ï–ï–† ================= */
class MusicPlayer {
  constructor() {
    this.audio = document.getElementById('music');
    this.playPauseBtn = document.getElementById('playPauseBtn');
    this.restartBtn = document.getElementById('restartBtn');
    this.lyricsText = document.getElementById('lyricsText');
    this.currentLineEl = document.getElementById('currentLine');
    this.progressFill = document.getElementById('progressFill');
    this.currentTimeEl = document.getElementById('currentTime');
    this.totalTimeEl = document.getElementById('totalTime');
    this.progressContainer = document.getElementById('progressContainer');
    this.playerCard = document.getElementById('playerCard');
    this.volumeSlider = document.getElementById('volumeSlider');
    this.volumeToggle = document.getElementById('volumeToggle');

    // drag state
    this.isScrubbing = false;
    this.wasPlaying = false;

    this.lyrics = [
      { time: 0, text: "))))))))))))...", speed: 12 },
      { time: 17.2, text: "–Ø –ø—Ä–∏–Ω–∞–¥–ª–µ–∂—É —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –æ–¥–Ω–æ–π", speed: 11 },
      { time: 21.6, text: "–¢—ã —Ç–æ–ª—å–∫–æ –º–æ—è, –∞ —è —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π", speed: 11 },
      { time: 26, text: "–Ø —Ö–æ—á—É —Å–ø–∞—Å—Ç–∏ –Ω–∞—à—É —Å —Ç–æ–±–æ–π –≤–µ—Å–Ω—É", speed: 11 },
      { time: 30, text: "–Ø —Ö–æ—á—É –ª—é–±–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–±—è –æ–¥–Ω—É", speed: 11 },
      { time: 34, text: "–Ø –ø—Ä–∏–Ω–∞–¥–ª–µ–∂—É —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –æ–¥–Ω–æ–π", speed: 11 },
      { time: 38.9, text: "–¢—ã —Ç–æ–ª—å–∫–æ –º–æ—è, –∞ —è —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π", speed: 11 },
      { time: 43.1, text: "–Ø —Ö–æ—á—É —Å–ø–∞—Å—Ç–∏ –Ω–∞—à—É —Å —Ç–æ–±–æ–π –≤–µ—Å–Ω—É", speed: 11 },
      { time: 47.5, text: "–Ø —Ö–æ—á—É –ª—é–±–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–±—è –æ–¥–Ω—É", speed: 11 },
      { time: 52.4, text: "–Ø –Ω–µ —Ö–æ—á—É –∑–∞–±—ã–≤–∞—Ç—å, —è –Ω–µ —Ö–æ—á—É —Ç–µ–±–µ –≤—Ä–∞—Ç—å", speed: 14 },
      { time: 55.6, text: "–Ø –ø–æ–º–Ω—é –∫–∞–∂–¥—ã–π –º–æ–π —Å–æ–Ω –æ —Ç–µ–±–µ:", speed: 14 },
      { time: 57.8, text: "–ª—é–±–æ–µ —Å–ª–æ–≤–æ, –ª—é–±—É—é –¥–µ—Ç–∞–ª—å", speed: 14 },
      { time: 60, text: "–≠—Ç–æ –Ω–∞–¥–æ–ª–≥–æ, –≤–æ–∑–º–æ–∂–Ω–æ –¥–æ –≥—Ä–æ–±–∞,", speed: 14 },
      { time: 62.2, text: "–µ—Å–ª–∏ –º—ã —Ä–∞–∑–¥–µ–ª–∏–º –µ–≥–æ –Ω–∞ –¥–≤–æ–∏—Ö", speed: 15 },
      { time: 64.4, text: "–¢—ã –Ω–∞–≤—Å–µ–≥–¥–∞ –±—É–¥–µ—à—å —Ç–æ–ª—å–∫–æ –º–æ–µ–π,", speed: 14 },
      { time: 66.6, text: "—è –Ω–∞–≤—Å–µ–≥–¥–∞ –±—É–¥—É —Ç–æ–ª—å–∫–æ —Ç–≤–æ–∏–º", speed: 14 },
      { time: 68.8, text: "–î–æ –∫–æ–Ω—Ü–∞ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞–º –æ—Ç–≤–µ–¥—ë–Ω–Ω–æ–≥–æ", speed: 15 },
      { time: 70.9, text: "—è –æ—Ç–¥–∞—é —Ç–µ–±–µ —Å–µ–±—è –≤—Å–µ–≥–æ", speed: 14 },
      { time: 72.9, text: "–Ø —Ç–æ—á–Ω–æ —É–∑–Ω–∞—é —Ç–≤–æ–π –≥–æ–ª–æ—Å –µ—â—ë —Ä–∞–∑", speed: 15 },
      { time: 74.9, text: "–∏–∑ —Ç–æ–º–Ω–æ–≥–æ –≥—É–ª–∞ —á—É–∂–∏—Ö –≥–æ–ª–æ—Å–æ–≤", speed: 15 },
      { time: 77.3, text: "–¢—ã –¥–ª—è –º–µ–Ω—è —á—Ç–æ-—Ç–æ –±–æ–ª—å—à–µ, —á–µ–º —Å–≤–µ—Ç,", speed: 15 },
      { time: 79.7, text: "—è –¥–ª—è —Ç–µ–±—è —á—Ç–æ-—Ç–æ —Ö—É–∂–µ, —á–µ–º —è–¥", speed: 15 },
      { time: 81.8, text: "–ù–æ –±–µ–∑ –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –º—ã —è–≤–Ω–æ –Ω–µ —Å–º–æ–∂–µ–º,", speed: 16 },
      { time: 83.8, text: "–≤–µ–¥—å –Ω–∞—à–∏ —Ç–µ–ª–∞ –¥—Ä—É–≥ –±–µ–∑ –¥—Ä—É–≥–∞ –±–æ–ª—è—Ç", speed: 16 },
      { time: 86, text: "–Ø –ø—Ä–æ—á–∏—Ç–∞–ª —Ç–µ–±—è –¥–æ —Å–µ—Ä–µ–¥–∏–Ω—ã,", speed: 15 },
      { time: 87.6, text: "–Ω–æ —Ç–æ—á–Ω–æ —É–≤–µ—Ä–µ–Ω ‚Äî —Ç—ã –∏–º–µ–Ω–Ω–æ —Ç–∞", speed: 15 },
      { time: 90.4, text: "–ù–∏–∫–∞–∫–∏—Ö —Ç–∞–π–Ω –∏ —Å–∫—Ä—ã—Ç—ã—Ö –º–æ—Ç–∏–≤–æ–≤,", speed: 15 },
      { time: 92.6, text: "—Ç—ã –≤ —ç—Ç–æ–π –≥—Ä—è–∑–∏ –ø—Ä–µ–¥–µ–ª—å–Ω–æ —á–∏—Å—Ç–∞", speed: 16 },
      { time: 94.6, text: "–ë–ª–∞–≥–æ–¥–∞—Ä—é —Ç–µ–±—è —Ç—ã—Å—è—á—É —Ä–∞–∑", speed: 15 },
      { time: 96.8, text: "–∏ –≤–æ–∑–≤—ã—à–∞—é —Ç–µ–±—è –¥–æ –õ—É–Ω—ã", speed: 15 },
      { time: 98.6, text: "–ù–µ –æ—Å—Ç–∞–≤–ª—è–π –º–µ–Ω—è —Ç—É—Ç –æ–¥–Ω–æ–≥–æ,", speed: 15 },
      { time: 100.8, text: "–≤–µ–¥—å –º–Ω–µ –æ—á–µ–Ω—å –¥–æ—Ä–æ–≥–∏ –≤—Å–µ —ç—Ç–∏ —Å–Ω—ã", speed: 15 },
      { time: 103.9, text: "–Ø –ø—Ä–∏–Ω–∞–¥–ª–µ–∂—É —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –æ–¥–Ω–æ–π", speed: 11 },
      { time: 108.1, text: "–¢—ã —Ç–æ–ª—å–∫–æ –º–æ—è, –∞ —è —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π", speed: 11 },
      { time: 112.3, text: "–Ø —Ö–æ—á—É —Å–ø–∞—Å—Ç–∏ –Ω–∞—à—É —Å —Ç–æ–±–æ–π –≤–µ—Å–Ω—É", speed: 11 },
      { time: 116.5, text: "–Ø —Ö–æ—á—É –ª—é–±–∏—Ç—å....", speed: 11 },
      { time: 121.2, text: "–Ø –ø—Ä–∏–Ω–∞–¥–ª–µ–∂—É —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –æ–¥–Ω–æ–π", speed: 11 },
      { time: 125.4, text: "–¢—ã —Ç–æ–ª—å–∫–æ –º–æ—è, –∞ —è —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π", speed: 11 },
      { time: 129.6, text: "–Ø —Ö–æ—á—É —Å–ø–∞—Å—Ç–∏ –Ω–∞—à—É —Å —Ç–æ–±–æ–π –≤–µ—Å–Ω—É", speed: 11 },
      { time: 133.8, text: "–Ø —Ö–æ—á—É –ª—é–±–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–±—è –æ–¥–Ω—É", speed: 11 },
      { time: 138, text: "–Ø –ø—Ä–∏–Ω–∞–¥–ª–µ–∂—É —Ç–æ–ª—å–∫–æ —Ç–µ–±–µ –æ–¥–Ω–æ–π", speed: 11 },
      { time: 142.2, text: "–¢—ã —Ç–æ–ª—å–∫–æ –º–æ—è, –∞ —è —Ç–æ–ª—å–∫–æ —Ç–≤–æ–π", speed: 11 },
      { time: 146.4, text: "–Ø —Ö–æ—á—É —Å–ø–∞—Å—Ç–∏ –Ω–∞—à—É —Å —Ç–æ–±–æ–π –≤–µ—Å–Ω—É", speed: 11 },
      { time: 150.6, text: "–Ø —Ö–æ—á—É –ª—é–±–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ–±—è –æ–¥–Ω—É", speed: 11 },
      { time: 158.3, text: "–° –¥–Ω–µ–º —Ä–æ–∂–¥–µ–Ω–∏—è, –º–∞–ª—ã—à, —è —Ç–µ–±—è –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –ª—é–±–ª—é!", speed: 12 },
      { time: 164.3, text: "–¢—ã –ª—É—á—à–µ–µ —á—Ç–æ —Å–ª—É—á–∞–ª–æ—Å—å –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏, —è –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ —Ç–æ–±–æ–π –≥–æ—Ä–∂—É—Å—å.", speed: 14 }
    ];

    this.currentLyricIndex = -1;
    this.isPlaying = false;
    this.typewriterInterval = null;
    this.isMuted = false;
    this.previousVolume = 50;

    this.init();
  }

  init(){
    setTimeout(()=>this.playerCard.classList.add('visible'),300);
    this.playPauseBtn.addEventListener('click',()=>this.togglePlayPause());
    this.restartBtn.addEventListener('click',()=>this.restartMusic());
    this.volumeSlider.addEventListener('input',e=>this.setVolume(+e.target.value));
    this.volumeToggle.addEventListener('click',()=>this.toggleMute());
    // –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: mute –ø–æ Enter/Space
    this.volumeToggle.addEventListener('keydown',(e)=>{
      if(e.key==='Enter'||e.key===' '){ e.preventDefault(); this.toggleMute(); }
    });

    // –∫–ª–∏–∫ –ø–æ –ø—Ä–æ–≥—Ä–µ—Å—Å—É
    this.progressContainer.addEventListener('click',e=>{
      if (this.isScrubbing) return;
      const r=this.progressContainer.getBoundingClientRect();
      const ratio=(e.clientX-r.left)/r.width;
      if (this.audio.duration && isFinite(this.audio.duration))
        this.audio.currentTime=Math.max(0,Math.min(1,ratio))*this.audio.duration;
    });

    // –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (mouse/touch unified)
    this.progressContainer.addEventListener('pointerdown', e => this.startScrub(e));
    document.addEventListener('pointermove', e => this.onScrub(e), {passive:false});
    document.addEventListener('pointerup',   () => this.endScrub());

    this.audio.addEventListener('loadedmetadata',()=>{
      if (this.audio.duration && isFinite(this.audio.duration))
        this.totalTimeEl.textContent=this.formatTime(this.audio.duration);
    });
    this.audio.addEventListener('timeupdate',()=>{
      if (!this.isScrubbing) this.updateProgress();
      this.updateLyrics();
    });
    this.audio.addEventListener('ended',()=>this.songEnded());

    this.setVolume(50);
    this.showInitialText();
  }

  /* drag helpers */
  startScrub(e){
    if (!this.audio.duration || !isFinite(this.audio.duration)) return;
    this.isScrubbing = true;
    this.wasPlaying = this.isPlaying;
    if (this.isPlaying) this.pauseMusic();
    this.progressContainer.setPointerCapture?.(e.pointerId);
    this.onScrub(e);
  }
  onScrub(e){
    if (!this.isScrubbing) return;
    const r = this.progressContainer.getBoundingClientRect();
    const x = Math.max(0, Math.min(r.width, (e.clientX ?? 0) - r.left));
    const ratio = x / r.width;
    const dur = this.audio.duration || 0;
    const t = ratio * dur;
    this.progressFill.style.width = `${ratio*100}%`;
    this.currentTimeEl.textContent = this.formatTime(t);
    this.audio.currentTime = t;
    // —Å—Ä–∞–∑—É –ø–æ–¥—Ç—è–Ω—É—Ç—å –ª–∏—Ä–∏–∫—É –ø—Ä–∏ —Å–∫—Ä–∞–±–µ
    this.updateLyrics();
  }
  endScrub(){
    if (!this.isScrubbing) return;
    this.isScrubbing = false;
    if (this.wasPlaying) this.playMusic();
  }

  showInitialText(){
    this.currentLineEl.textContent=`0 / ${this.lyrics.length}`;
    this.lyricsText.innerHTML=`<div class="lyric-line" style="animation:flicker 3s infinite;">–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–∞—á–∞–ª–∞ –º—É–∑—ã–∫–∏...</div>`;
  }
  togglePlayPause(){ this.isPlaying?this.pauseMusic():this.playMusic(); this.updateButtonClasses(); }
  updateButtonClasses(){ this.playPauseBtn.classList.toggle('play',!this.isPlaying); this.playPauseBtn.classList.toggle('pause',this.isPlaying); }
  async playMusic(){ try{ await this.audio.play(); this.isPlaying=true; this.updateLyrics(); }catch{} }
  pauseMusic(){ this.audio.pause(); this.isPlaying=false; if (this.typewriterInterval) clearInterval(this.typewriterInterval); }
  restartMusic(){ this.audio.currentTime=0; this.currentLyricIndex=-1; this.showInitialText(); this.playMusic(); }
  setVolume(v){ const vol=Math.max(0,Math.min(100,Number(v)||0)); this.audio.volume=vol/100; this.volumeSlider.value=String(vol); this.updateVolumeIcon(this.audio.volume); if(this.isMuted && vol>0) this.isMuted=false; if(vol>0) this.previousVolume=vol; }
  toggleMute(){ if(this.isMuted||this.audio.volume===0){ const restore=this.previousVolume||50; this.setVolume(restore); this.isMuted=false; } else { this.previousVolume=this.volumeSlider.valueAsNumber||50; this.setVolume(0); this.isMuted=true; } }
  updateVolumeIcon(vol){ this.volumeToggle.className='volume-icon'; if(vol===0||this.isMuted) this.volumeToggle.classList.add('muted'); else if(vol<0.5) this.volumeToggle.classList.add('low'); else this.volumeToggle.classList.add('high'); }
  updateProgress(){
    const ct=this.audio.currentTime, dur=this.audio.duration||0;
    this.progressFill.style.width=`${dur? (ct/dur*100):0}%`;
    this.currentTimeEl.textContent=this.formatTime(ct);
    if (dur && isFinite(dur)) this.totalTimeEl.textContent=this.formatTime(dur);
  }
  updateLyrics(){
    const t=this.audio.currentTime||0; let idx=-1;
    for(let i=this.lyrics.length-1;i>=0;i--){ if(t+0.03>=this.lyrics[i].time){ idx=i; break; } }
    if(idx!==this.currentLyricIndex && idx>=0){ this.currentLyricIndex=idx; this.showLyric(idx); }
  }
  showLyric(i){
    const l=this.lyrics[i]; this.currentLineEl.textContent=`${i+1} / ${this.lyrics.length}`;
    if(this.typewriterInterval) clearInterval(this.typewriterInterval);
    const el=document.createElement('div'); el.className='lyric-line'; el.style.cssText='font-size:1.3em; font-style:italic; min-height:50px; display:flex; align-items:center; justify-content:center; text-align:center;';
    this.lyricsText.innerHTML=''; this.lyricsText.appendChild(el);
    const cursor=document.createElement('span'); cursor.className='typewriter-cursor'; cursor.textContent='|'; el.appendChild(cursor);
    let k=0, speed=Math.max(1,Number(l.speed)||12);
    this.typewriterInterval=setInterval(()=>{ if(k<l.text.length){ el.textContent=l.text.substring(0,k+1); el.appendChild(cursor); k++; } else { clearInterval(this.typewriterInterval); this.typewriterInterval=null; el.style.animation='flicker 3s infinite'; } }, 1000/speed);
  }
  songEnded(){ this.isPlaying=false; this.updateButtonClasses(); if(this.typewriterInterval) clearInterval(this.typewriterInterval); }
  formatTime(s){ if(!s||isNaN(s)||!isFinite(s)) return '0:00'; const m=Math.floor(s/60), ss=Math.floor(s%60); return `${m}:${ss<10?'0':''}${ss}`; }
}

/* ============== –ú–∏–Ω–∏-–∏–≥—Ä–∞ (–±—ã–≤—à. Level1) ============== */
class GameRunner {
  constructor(){
    this.canvas = document.getElementById('gameCanvas');
    this.ctx = this.canvas.getContext('2d');
    this.msg = document.getElementById('gameMsg');
    this.btnStart = document.getElementById('gameStart');
    this.btnReset = document.getElementById('gameReset');
    this.finalScene = document.getElementById('finalScene');

    // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
    this.gravity = 1600;
    this.jumpVel = -520;
    this.speed = 240;
    this.groundY = this.canvas.height - 40;

    // –ò–≥—Ä–æ–∫
    this.player = { x: 84, y: this.groundY-42, w: 46, h: 42, vy:0, onGround:true, alive:true };

    // –°–ø—Ä–∞–π—Ç –¥–µ–≤—É—à–∫–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    this.girlImg = new Image();
    this.girlImg.src = 'girl.png'; // –ø–æ–ª–æ–∂–∏ —Ä—è–¥–æ–º —Å index.html
    this.girlLoaded = false;
    this.girlImg.onload = () => this.girlLoaded = true;

    this.obstacles = [];
    this.totalToFinish = 20;
    this.passed = 0;

    this.running=false;
    this.lastT=0;

    this.bind();
    window.addEventListener('resize', ()=>this.resizeCanvasToDisplaySize());
    this.reset();
  }

  bind(){
    this.btnStart.addEventListener('click', ()=> this.start());
    this.btnReset.addEventListener('click', ()=> this.reset());
    this.canvas.addEventListener('pointerdown', ()=>{ if(this.running) this.jump(); });

    // –∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π —Å—Ü–µ–Ω—ã –ø–æ –∫–ª–∏–∫—É –∏ ESC
    this.finalScene.addEventListener('click', (e)=>{
      const isCloseBtn = e.target.closest('.final-close');
      const isOutside  = e.target === this.finalScene;
      if (isCloseBtn || isOutside) this.closeFinal();
    });

    // –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å: –ø—Ä–æ–±–µ–ª/—Å—Ç—Ä–µ–ª–∫–∞ –≤–≤–µ—Ä—Ö ‚Äî –ø—Ä—ã–∂–æ–∫; Esc ‚Äî –∑–∞–∫—Ä—ã—Ç—å –æ–≤–µ—Ä–ª–µ–π
    window.addEventListener('keydown', (e)=>{
      if (e.key === 'Escape' && this.finalScene.classList.contains('show')) {
        this.closeFinal();
      }
      if (!this.running) return;
      if (e.code === 'Space' || e.code === 'ArrowUp') { e.preventDefault(); this.jump(); }
    });
  }

  reset(){
    this.closeFinal();

    this.player.y = this.groundY - this.player.h;
    this.player.vy = 0; this.player.onGround = true; this.player.alive = true;

    this.obstacles = [];
    let x = 380;
    for(let i=0;i<this.totalToFinish;i++){
      const w = 16 + Math.floor(Math.random()*8);   // 16‚Äì24
      const h = 16 + Math.floor(Math.random()*8);   // 16‚Äì24
      this.obstacles.push({ x, y:this.groundY-h, w, h, counted:false });
      // —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è–º–∏: 250‚Äì350
      x += 250 + Math.floor(Math.random()*100);
    }
    this.finishX = x + 120;
    this.passed = 0;
    this.showMsg('–õ–ö–ú/—Ç–∞–ø ‚Äî –ø—Ä—ã–∂–æ–∫. –ü–µ—Ä–µ–ø—Ä—ã–≥–Ω–∏ 20 –ø—Ä–æ—Å—Ç—ã—Ö –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π.');
  }

  start(){
    if (this.running) return; // –∑–∞—â–∏—Ç–∞ –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–ø—É—Å–∫–æ–≤
    this.running = true;
    this.hideMsg();
    this.resizeCanvasToDisplaySize();
    this.lastT = performance.now();
    requestAnimationFrame((t)=>this.loop(t));
  }

  // —Ä–µ—Ç–∏–Ω–∞-—Å–∫–µ–π–ª: —Ä–∏—Å—É–µ–º –≤ CSS-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö, –Ω–æ —Å —á—ë—Ç–∫–∏–º bitmap
  resizeCanvasToDisplaySize(){
    const ratio = Math.max(1, Math.floor(window.devicePixelRatio || 1));
    const rect  = this.canvas.getBoundingClientRect();
    const needW = Math.floor(rect.width  * ratio);
    const needH = Math.floor(rect.height * ratio);
    if (this.canvas.width !== needW || this.canvas.height !== needH) {
      this.canvas.width  = needW;
      this.canvas.height = needH;
    }
    this.ctx.setTransform(ratio, 0, 0, ratio, 0, 0);
  }

  jump(){
    if(this.player.onGround){
      this.player.vy = this.jumpVel;
      this.player.onGround = false;
    }
  }

  loop(t){
    if(!this.running) return;
    const dt = Math.min(0.033, (t - this.lastT)/1000);
    this.lastT = t;
    this.update(dt);
    this.draw();
    requestAnimationFrame((tt)=>this.loop(tt));
  }

  update(dt){
    const dx = this.speed * dt;
    for(const o of this.obstacles){ o.x -= dx; }
    this.finishX -= dx;

    this.player.vy += this.gravity * dt;
    this.player.y += this.player.vy * dt;
    if(this.player.y + this.player.h >= this.groundY){
      this.player.y = this.groundY - this.player.h;
      this.player.vy = 0; this.player.onGround = true;
    }

    for(const o of this.obstacles){
      if(!o.counted && this.player.x > o.x + o.w){ o.counted = true; this.passed++; }
      if(this.intersect(this.player, o)){ this.gameOver(); return; }
    }

    if(this.passed >= this.totalToFinish && this.player.x > this.finishX){
      this.win();
    }
  }

  intersect(a,b){ return !(a.x+a.w < b.x || a.x > b.x+b.w || a.y+a.h < b.y || a.y > b.y+b.h); }

  draw(){
    const c = this.ctx;

    // –æ—á–∏—Å—Ç–∫–∞ bitmap —Ü–µ–ª–∏–∫–æ–º
    c.setTransform(1,0,0,1,0,0);
    c.clearRect(0,0,this.canvas.width,this.canvas.height);

    // –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∏—Å–æ–≤–∞–Ω–∏–µ –≤ CSS-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö
    const ratio = Math.max(1, Math.floor(window.devicePixelRatio || 1));
    c.setTransform(ratio,0,0,ratio,0,0);

    const W = this.canvas.width / ratio;
    const H = this.canvas.height / ratio;

    c.fillStyle='#0a0a0a'; c.fillRect(0,0,W,H);
    c.fillStyle='#0c0c0c'; for(let i=0;i<H;i+=6){ c.fillRect(0,i,W,1); }

    c.fillStyle='#151515'; c.fillRect(0,this.groundY+1,W,2);
    c.fillStyle='#1d1d1d'; c.fillRect(0,this.groundY+3,W,3);

    for(const o of this.obstacles){
      c.fillStyle='#3b0b0b'; c.fillRect(o.x,o.y,o.w,o.h);
      c.fillStyle='#5a1010'; c.fillRect(o.x+1,o.y+1,o.w-2,o.h-2);
    }

    if(this.passed >= this.totalToFinish){
      const flagW=8;
      for(let y=0;y<this.groundY; y+=10){
        c.fillStyle=(Math.floor(y/10)%2===0)?'#7a0000':'#2a0000';
        c.fillRect(this.finishX, y, flagW, 10);
      }
      c.fillStyle='rgba(255,255,255,.08)';
      c.font='bold 28px Times New Roman';
      c.fillText('–¢–ê–ù–ê–ò–°', this.finishX-36, this.groundY-52);
    }

    this.drawGirlImage(c, this.player);

    c.fillStyle='rgba(170,0,0,.85)'; c.font='16px Times New Roman';
    c.fillText(`–û—Å—Ç–∞–ª–æ—Å—å: ${Math.max(0, this.totalToFinish - this.passed)}`, 14, 22);
  }

  drawGirlImage(c, pl){
    c.fillStyle='rgba(0,0,0,.35)';
    c.beginPath(); c.ellipse(pl.x + pl.w*0.5, pl.y + pl.h + 3, pl.w*0.6, 3, 0, 0, Math.PI*2); c.fill();

    if(this.girlLoaded){
      const pad = 2;
      c.drawImage(this.girlImg, pl.x - pad, pl.y - pad, pl.w + pad*2, pl.h + pad*2);
    } else {
      c.fillStyle='#0b0b0b';
      c.fillRect(pl.x+pl.w*0.45, pl.y+pl.h*0.15, pl.w*0.10, pl.h*0.55);
      c.beginPath(); c.ellipse(pl.x+pl.w*0.5, pl.y, 6.5, 7.2, 0, 0, Math.PI*2); c.fill();
    }
  }

  gameOver(){ this.running = false; this.showMsg('–ü—Ä–æ–º–∞—Ö! –ù–∞–∂–º–∏ ¬´–°–±—Ä–æ—Å¬ª, —á—Ç–æ–±—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞.'); }

  win(){
    this.running=false;
    this.showMsg('–≤—ã –¥–æ–±—Ä–∞–ª–∏—Å—å –¥–æ –¢–∞–Ω–∞–∏—Å–∞)');
    setTimeout(()=>{
      this.hideMsg();
      this.finalScene.classList.add('show'); // –ø–ª–∞–≤–Ω–æ–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏–µ
      document.body.classList.add('modal-open');
      // —Ñ–æ–∫—É—Å –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
      const closeBtn = this.finalScene.querySelector('.final-close');
      closeBtn?.focus();
    }, 900);
  }

  closeFinal(){
    this.finalScene.classList.remove('show');
    document.body.classList.remove('modal-open');
  }

  showMsg(text){ this.msg.textContent = text; this.msg.classList.add('show'); }
  hideMsg(){ this.msg.classList.remove('show'); }
}

// –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –∑–∞–ø—É—Å–∫ (—É–±—Ä–∞–Ω –¥—É–±–ª—å MusicPlayer)
window.addEventListener('load', ()=>{
  window.musicPlayer = new MusicPlayer();
  window.gameRunner  = new GameRunner();
});
